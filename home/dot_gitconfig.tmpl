[user]
    name = {{ .name }}
    email = {{ .email }}
    signingkey = {{ .gpgkey }}
[core]
    excludesFile = ~/.gitignore
    editor = nvim
    pager = less -RFX
    splitIndex = true
    untrackedCache = true
    longpaths = true
    symlinks = true
    fsmonitor = true
    fsync = committed,added,commit-graph
    fsyncMethod = batch
    sshCommand = ssh -q
    autocrlf = input
[include]
    path = themes.gitconfig
    path = darcubox.gitconfig
    path = delta.gitconfig
[pretty]
    extended = format:%C(bold blue)%h% C(dim white)- %an %C(bold green)%ad%C(auto)%d%n %C(bold white)%s
    alt = format:%C(yellow)%h %C(green)%ad %C(cyan)[%an] %C(reset)%s %C(auto)%d
    alt-rel = format:%C(yellow)%h %C(green)%ar %C(cyan)[%an] %C(reset)%s %C(auto)%d
    sub-auth = format:%C(red)%h %C(reset)| %s %C(bold blue)[%an] %C(green)(%cd)%C(auto)%d
    twolines = "format:%C(green)%h% C(#00FFE3)%ad %C(bold yellow)%an%C(auto)%d%n%C(#AA75D0)%s%n"
[alias]
    ## Compare with remote
    incoming = log ..@{u}
    outgoing = log @{u}..
    unpushed = log --branches --not --remotes=origin
    compare = difftool -d -g @ @{u}

    ## Diff
    delta = -c core.pager=delta diff
    delta2 = "!git -c core.pager=delta -c delta.features=\"$1\" diff #"
    difft = -c diff.externa=difft diff
    difftd = -c core.pager=delta -c diff.externa=difft diff

    ## Misc
    it = !git init && git commit -m root --allow-empty
    st = status --short --branch
    so = show --pretty='parent %C(red)%p %C(reset)commit %C(red)%h%C(yellow)%d%C(reset)%n%n%w(72,2,2)%s%n%n%w(72,0,0)%C(cyan)%an %C(green)%ar'
    show-rd = show --remerge-diff
    ss = stash --staged
    alias = config --get-regexp ^alias\\.
    untracked = ls-files --others --exclude-standard
    unstage = restore --staged
    cnv = commit --no-verify
    grepd = -c core.pager=delta grep
    # Use fzf to select branch to checkout
    gcb = !git branch | fzf | cut -c 3- | xargs git checkout
    gcbp = !git branch | fzf --preview 'git show --color=always {-1}' --bind 'enter:become(git checkout {-1})'

    ## Push to remote
    please = push --force-with-lease
    pu = !git push origin `git branch --show-current`
    push-origin = push --set-upstream origin

    ## Log
    grog = log --graph --decorate --pretty=extended
    ldec = log --format='%cr%(decorate) (%h) %s'
    l = log --pretty=alt --date=relative
    lg = l --graph
    lgb = lg --branches
    ld = -c core.pager=delta log -p
    lds = -c 'delta.features=sideways decorations my-line-numbers emph' -c core.pager=delta log -p
    graph = lg --decorate --simplify-by-decoration
    hist = log --graph --oneline --all --decorate --simplify-by-decoration
    # nd = No dependabot. Set --perl-regexp to be safe.
    lnd = log -P --author='^((?!dependabot).*)$'

    ## Refs
    rf = for-each-ref --sort=-committerdate --format='%(color:blue bold)%(refname:short)%(color:reset) %(color:yellow)%(committerdate:relative) %(color:magenta bold)%(authorname) %(color:green)%(objectname:short)%(color:reset) %(contents:subject)'
    lbs = rf refs/heads
    rbs = rf refs/remotes

    ## Ignoring files
    # This ignores updates to file
    pin = update-index --assume-unchanged
    unpin = update-index --no-assume-unchanged
    pinned = !git ls-files -v | rg -e '^h (.+)' -o --replace '$1' --color never
    # https://stackoverflow.com/a/61311958/781045
    ignored = ls-files --exclude-standard -oi
    # This won't even check if file is in worktree. Useful for sparse checkout.
    skip = update-index --skip-worktree
    unskip = update-index --no-skip-worktree
    skipped = !git ls-files -v | rg -e '^S (.+)' -o --replace '$1' --color never

    ## Rewrite history
    rbi = rebase --autosquash -i HEAD@{upstream}
    append = !git cherry-pick $(git merge-base HEAD $1)..$1
    pop = reset HEAD^

    ## Fetch commits
    fa = fetch --all
    fc = !git fetch origin $(git branch --show-current)
    up = !git fetch && git rebase --autostash FETCH_HEAD
    su = submodule update --recursive --remote

    ## Merge
    mffo = merge --ff-only
[blame]
    coloring = highlightRecent
    markIgnoredLines = true
    markUnblamableLines = true
[rerere]
    enabled = true
    autoupdate = true
[push]
    followTags = true
    autoSetupRemote = true
[fetch]
    prune = true
    parallel = 0
    writeCommitGraph = true
    fsckobjects = true
[pull]
    rebase = true
    twohead = ort
[status]
    showUntrackedFiles = all
    showStash = true
[diff]
    tool = meld
    guitool = meld
    colorMoved = default
    colorMovedWS = ignore-space-at-eol
    mnemonicPrefix = true
    renames = copies
    renameLimit = 10000
    wsErrorHighlight = all
    submodule = log
[difftool]
    prompt = false
[difftool "meld"]
    cmd = meld "$LOCAL" "$REMOTE"
[difftool "difftastic"]
    cmd = difft "$LOCAL" "$REMOTE"
[difftool "vscode"]
    cmd = code --new-window --wait --diff \"$LOCAL\" \"$REMOTE\"
[merge]
    tool = meld
    log = true
    conflictStyle = zdiff3
    renameLimit = 99999
[mergetool]
    prompt = false
    keepBackup = false
[mergetool "meld"]
    cmd = meld "$LOCAL" "$MERGED" "$REMOTE" --output "$MERGED"
    trustExitCode = true
[mergetool "vscode"]
    cmd = code --new-window --wait --merge \"$REMOTE\" \"$LOCAL\" \"$BASE\" \"$MERGED\"
[diff "rstats"]
    xfuncname = "^[[:space:]]*([a-zA-z._]+)[[:space:]]*<-[[:space:]]*function"
[rebase]
    autoSquash = true
    autoStash = false
    missingCommitsCheck = error
    updateRefs = true
[submodule]
    fetchJobs = 0
    recurse = true
[filter "lfs"]
    process = git-lfs filter-process
    required = true
    clean = git-lfs clean -- %f
    smudge = git-lfs smudge -- %f
[interactive]
    diffFilter = delta --color-only
[delta]
    # Override or modify (precede with +) with $DELTA_FEATURES
    features = default sideways
    navigate = true
    hyperlinks = true
    map-styles = bold purple => syntax magenta, bold cyan => syntax blue
    true-color = always
[tag]
    sort = version:refname
    gpgsign = true
[commit]
    gpgsign = true
# https://blog.jmorbegoso.com/post/configure-github-gpg-key-in-windows-and-wsl/
[gpg]
    program = /usr/bin/gpg
[color]
    ui = true
[color "diff-highlight"]
    oldNormal = red bold
    oldHighlight = red bold 52
    newNormal = green bold
    newHighlight = green bold 22
[color "diff"]
    meta = 11
    frag = magenta bold
    func = 146 bold
    commit = yellow bold
    old = red bold
    new = green bold
    whitespace = red reverse
[checkout]
    workers = 0
[index]
    version = 4
[help]
    autoCorrect = prompt
[transfer]
    credentialsInUrl = warn
[gc]
    cruftPacks = true
    maxCruftSize = 10M
    rerereResolved = "6.months.ago"
    rerereUnresolved = "2.months.ago"
[log]
    date = rfc
[credential "https://huggingface.co"]
    provider = generic
# https://stackoverflow.com/a/71904131/781045
[safe]
    directory = *
[absorb]
    maxStack = 15
    fixupTargetAlwaysSHA = true
[maintenance "commit-graph"]
    enabled = true
[maintenance "prefetch"]
    enabled = true
[maintenance "incremental-repack"]
    enabled = true
[maintenance "loose-objects"]
    enabled = true
[maintenance "pack-refs"]
    enabled = true
[maintenance "reflog-expire"]
    enabled = true
    schedule = weekly
[maintenance "rerere-gc"]
    enabled = true
    schedule = weekly
[maintenance "worktree-prune"]
    enabled = true
[pager]
    tag = cat
    format-patch = cat
    diff = delta
    show = delta
    # Use a pager if the difftool output is larger than one screenful,
    # consistent with the behaviour of `git diff`.
    difftool = true
[credential]
    helper = cache
[credential "https://gist.github.com"]
    helper = !gh auth git-credential
[credential "https://github.com"]
    helper = !gh auth git-credential
# Avoid error when updating Lazy plugins with submodules
[includeIf "gitdir:lazy"]
    path = ~/lazy.gitconfig
[column]
    ui = auto
[branch]
    sort = -committerdate
[grep]
    patternType = perl
